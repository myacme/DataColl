<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bonc.colldata.mapper.CollTableDataDao">

    <resultMap id="BaseResultMap" type="com.bonc.colldata.entity.CollTableData">
        <!--@Table coll_table_data-->
        <result property="dataCode" column="data_code" jdbcType="VARCHAR"/>
        <result property="businessTypeCode" column="business_type_code" jdbcType="VARCHAR"/>
        <result property="tableBusinessCode" column="table_business_code" jdbcType="VARCHAR"/>
        <result property="tableConfigCode" column="table_config_code" jdbcType="VARCHAR"/>
        <result property="departmentCode" column="department_code" jdbcType="VARCHAR"/>
        <result property="dataValue" column="data_value" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="VARCHAR"/>
        <result property="version" column="version" jdbcType="VARCHAR"/>
        <result property="tableConfigName" column="table_config_name" jdbcType="VARCHAR"/>
        <result property="state" column="state" jdbcType="VARCHAR"/>
        <result property="thisUpdate" column="this_update" jdbcType="VARCHAR"/>
        <result property="lowerUpdate" column="lower_update" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          data_code, business_type_code, table_business_code, table_config_code, department_code, data_value, create_time, version,this_update,lower_update
        from main.coll_table_data
        where  data_code = #{id}
            and state = '1'
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
            a.data_code, a.business_type_code, a.table_business_code, a.table_config_code, a.department_code, a.data_value, a.create_time, a.version,this_update,lower_update,
            b.table_config_name
        from main.coll_table_data a LEFT JOIN main.coll_business_table_config b on a.table_config_code = b.table_config_code
        where a.table_business_code = #{tableCode}
            and a.version = #{version}
            and state = '1'

    </select>

    <select id="getDataList" resultType="java.util.Map">
        select data_code,business_type_code,table_business_code,version,department_code, max(${update}) '${update}'
        <foreach collection="list" index="index" item="item">
            ,max(case table_config_code when #{item.tableConfigCode} then data_value end ) '${item.tableConfigCode}'
        </foreach>
        from coll_table_data
        <where>
            <if test="dataCode != null and dataCode != ''">
                and data_code = #{dataCode}
            </if>
            <if test="tableCode != null and tableCode!=''">
                and table_business_code = #{tableCode}
            </if>
            <if test="version != null and version!=''">
                and version = #{version}
            </if>
            <if test="array != null">
                and department_code in
                <foreach collection="array" index="index" item="item" open="(" close=")"
                         separator=",">
                    #{item}
                </foreach>
            </if>
            and state = '1'
        </where>
        GROUP BY data_code,business_type_code,table_business_code,version,department_code
        ORDER BY create_time desc
    </select>

    <select id="queryAll" resultMap="BaseResultMap">
        select
          data_code, business_type_code, table_business_code, table_config_code, department_code, data_value, create_time, version,this_update,lower_update
        from main.coll_table_data
        <where>
            <if test="version != null and version != ''">
                and version = #{version}
            </if>
            and state = '1'
        </where>
    </select>

    <select id="queryAllOfTowVersion" resultMap="BaseResultMap">
        select
          data_code, business_type_code, table_business_code, table_config_code, department_code, data_value, create_time, version
        from main.coll_table_data
        where
            table_business_code in(
                SELECT
                    business_type_table_code
                FROM
                    coll_business_table_type
                WHERE
                    state = '1'
                    AND business_type_table_code IN (
                        SELECT send_task_table_code FROM coll_receive_task_table WHERE send_task_code IN (
                            SELECT send_task_code FROM coll_receive_task WHERE send_task_version = #{rportVersion} ) )
                intersect
                SELECT
                    business_type_table_code
                FROM
                    coll_business_table_type
                WHERE
                    state = '1'
                    AND business_type_table_code IN (
                        SELECT send_task_table_code FROM coll_receive_task_table WHERE send_task_code IN (
                            SELECT send_task_code FROM coll_receive_task WHERE send_task_version = #{historyVersion} ) )
            )
            and version = #{historyVersion}
            and state = '1'
    </select>

    <select id="queryMap" resultType="map">
        select
          data_code, business_type_code, table_business_code, table_config_code, department_code, data_value, create_time, version,this_update,lower_update
        from main.coll_table_data
        <where>
            <if test="version != null and version != ''">
                and version = #{version}
            </if>
            and state = '1'
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert">
        insert into main.coll_table_data(data_code, business_type_code, table_business_code, table_config_code, department_code, data_value, create_time, version,lower_update)
        values (#{dataCode}, #{businessTypeCode}, #{tableBusinessCode}, #{tableConfigCode}, #{departmentCode}, #{dataValue}, #{createTime}, #{version},#{thisUpdate})
    </insert>

    <!--批量新增所有列-->
    <insert id="insertList" >
        <if test="list != null">
            insert into main.coll_table_data(data_code, business_type_code, table_business_code, table_config_code, department_code, data_value, create_time, version,lower_update)
            values
            <foreach collection="list" index="index" item="item" separator=",">
                (#{item.dataCode}, #{item.businessTypeCode}, #{item.tableBusinessCode}, #{item.tableConfigCode}, #{item.departmentCode}, #{item.dataValue}, #{item.createTime}, #{item.version},#{item.thisUpdate})
            </foreach>
        </if>
    </insert>


    <!--通过主键修改数据-->
    <update id="update">
        update main.coll_table_data
        <set>
            <if test="dataValue != null and dataValue != ''">
                this_update = '1',
                data_value = #{dataValue},
            </if>
        </set>
        where data_code = #{dataCode}
        and  table_config_code = #{tableConfigCode}
    </update>
    <!--批量修改数据-->
    <update id="updateList" parameterType="list">
        <if test="list != null">
            <foreach collection="list" index="index" item="item" separator=";">
                update main.coll_table_data
                <set>
                    <if test="item.dataValue != null">
                        this_update = '1',
                        data_value = #{item.dataValue,jdbcType=VARCHAR},
                    </if>
                </set>
                where data_code = #{item.dataCode}
                    and  table_config_code = #{item.tableConfigCode}
            </foreach>
        </if>
    </update>

    <!--通过主键删除-->
    <update id="deleteById">
        update main.coll_table_data set state = '0' where data_code = #{id}
    </update>

    <!--通过主键删除-->
    <update id="delete">
        update main.coll_table_data set state = '0'
        where data_code in
        <if test="list != null">
            <foreach collection="list" index="index" item="item" open="(" close=")"
                     separator=",">
                #{item.id}
            </foreach>
        </if>
    </update>

    <select id="queryVersionOfA" resultType="java.util.Map">
        SELECT version from coll_table_data GROUP BY version HAVING version like 'a%'
    </select>

</mapper>